webpackJsonp([10],{

/***/ "./assets/js/formHandler.js":
/*!**********************************!*\
  !*** ./assets/js/formHandler.js ***!
  \**********************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function($) {$(function(){function a(a,b){b?a.parent().removeClass('has-error').addClass('has-success'):a.parent().removeClass('has-success').addClass('has-error')}function b(a){var b=/^[a-zA-ZàáâäãåąčćęèéêëėįìíîïłńòóôöõøùúûüųūÿýżźñçčšžÀÁÂÄÃÅĄĆČĖĘÈÉÊËÌÍÎÏĮŁŃÒÓÔÖÕØÙÚÛÜŲŪŸÝŻŹÑßÇŒÆČŠŽ∂ð ,.'-]{2,}$/;return b.test(a)}function c(a){var b=/^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;return b.test(a)}function d(a){var b=/^(.|\s)+$/i;return b.test(a)}function e(e){e.name.on('keyup',function(){b(e.name.val())?a(e.name,!0):a(e.name,!1)}),e.email.on('keyup',function(){c(e.email.val())?a(e.email,!0):a(e.email,!1)}),e.subject.on('keyup',function(){b(e.subject.val())?a(e.subject,!0):a(e.subject,!1)}),e.message.on('keyup',function(){d(e.message.val())?a(e.message,!0):a(e.message,!1)})}function f(a){var b=$('#contactForm');b.on('submit',function(b){b.preventDefault();var c,d=!0,e=$('#submitButton');for(c in e.button('loading'),a)a[c].parent().hasClass('has-error')&&(d=!1);if(d){var f=new FormData(b.target);$.ajax({type:'POST',url:$(b.target).data('action'),data:f,processData:!1,contentType:!1}).done(function(){$('.form-group').hide(),e.hide(),$('#formThanks').fadeIn()}).fail(function(){$('#sendingError').fadeIn().delay(4e3).fadeOut(),e.button('reset')})}else{var g=$('#formError');g.fadeIn().delay(4e3).fadeOut(),e.button('reset')}})}(function(){var a={name:$('#app_email_name'),email:$('#app_email_email'),subject:$('#app_email_subject'),message:$('#app_email_content')};e(a),f(a)})()});
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js")))

/***/ })

},["./assets/js/formHandler.js"]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,